for(i in 1:N){
geometric_seq[i]=2^(i-1)
}
a=1:10
a[2]
ls()
ls
ls()
a=100
rm(list=ls())
myFirstFun <- function(x) {
sum(x)
}
u <- myFirstFun(x)
u
rm(list=ls())
myFirstFun <- function(x) {
sum(x)
}
x=1:10
u <- myFirstFun(x)
u
rm(list=ls())
rm(list=ls())
Myx <- 8
MyFun <- function() {
#Myx <- 10
message("x is ", Myx)
Myy <- 20
}
MyFun()
search() # lists all parents of the global environment.
search() # lists all parents of the global environment.
search()
library(MASS)
search()
str="apple"
str[3]
s="apple"
s
type(s)
typeof(s)
class(s)
E<-matrix(c(1,0,0,0,1,0,0,1,1),ncol=3)
'''
x <- c(1.00, 2.00, 3.00, 4.00, 5.00)
y <- c(3.70, 4.20, 4.90, 5.70, 6.00)
plot(x = x, y = y)
xbar <- mean(x)
ybar <- mean(y)
beta.hat <- sum( (x-xbar)*(y-ybar) ) / sum( (x-xbar)^2 )
alpha.hat <- ybar - beta.hat*xbar
fit <- lm(y~x)
coef(fit)
X <- cbind( rep(x = 1, 5), x)
solve((t(X)%*%X))%*%t(X)%*%Y
Y <- matrix(data = y, nrow = 5, ncol = 1)
crossprod(x = X, y = X)
'''
E
E<-matrix(c(1,0,0,0,1,1,0,0,1),ncol=3)
E
E%*%A
##2
a<-c(1,5,-2,1,2,-1,3,6,-3)
A<-matrix(a,nrow=3)
A%*%A%*%A
E<-matrix(c(1,0,0,0,1,1,0,0,1),ncol=3)
E
E%*%A
A<-matrix(a,nrow=3)
A
E
E%*%A
A<-matrix(c(1,2,3,4,5,2,1,2,3,4,3,2,1,3,2,4,3,2,1,2,5,4,3,2,1),ncol=5)
A
ans<-matrix(c(7,-1,-3,5,7),ncol=1)
ans<-matrix(c(7,-1,-3,5,7),ncol=1)
solve(A)%*%ans
mtcar
mtcars
class(mtcars$cyl)
table(mtcars$cyl)
mtcar$cyl
mtcars$cyl
lm(wt~cyl,data =mtcars )
symmary(lm(wt~cyl,data =mtcars ))
summary(lm(wt~cyl,data =mtcars ))
mtcars$cyl_factor <- as.factor(mtcars$cyl)
summary(lm(wt~cyl_factor,data =mtcars ))
cls
dt1 <- subset(x = mtcars, subset = cyl==6)
dt1
matcars[mtcars$cyl==6]
mtcars[mtcars$cyl==6]
mtcars[mtcars$cyl==6,]
mtcars[c(hp,wp),]
mtcars[hp,]
mtcars$hp
dt4 <- subset(x = mtcars, select = c(hp, wt) )
dt4
mtcars[,c("hp","wp")]
mtcars[,c("hp","wt")]
mtcars[c("hp","wt"),]
mtcars[mtcars$cyl==6,]
mtcars[mpg>30,]
mtcars[mtcars$mpg>30,]
mtcars[mtcars$mpg>30 && mtcars$wt<2,]
mtcars[mtcars$mpg>30 || mtcars$wt<2,]
mtcars[mtcars$mpg>30 | mtcars$wt<2,]
mysplit <- split(x = mtcars, f = mtcars$cyl_factor)
cls
mysplit <- split(x = mtcars, f = mtcars$cyl_factor)
mtcars$cyl_factor <- as.factor(mtcars$cyl)
mysplit <- split(x = mtcars, f = mtcars$cyl_factor)
mysplit
mysplit$4
mysplit$"4"
mtcars$cyl_factor <- as.factor(mtcars$cyl)
mysplit["4",]
mysplit[,"4"]
mysplit[,1]
mysplit[,1]
mysplit[1]
mysplit[[1]]
mysplit[1,]
mysplit[,1]
set.seed(123)
mysplit[1]
set.seed(123)
n <- 5
X <- cbind( rep(1, n), rnorm(n))
X
T(X)
t(X)
H<-X%*%solve(t(X)%*%X)%*%t(X)
H
#b
MyEig <- eigen(H)
#b
MyEig <- eigen(H)
cat("eigenvalues: ",MyEig$values)
cat("eigenvactors: ",MyEig$vectors)
MyEig$values
MyEig$vectors
#b
MyEig <- eigen(H)
cat("eigenvalues: ")
MyEig$values
cat("eigenvactors: ")
MyEig$vectors
A<-matrix(c(1,2,3,4,5,2,1,2,3,4,3,2,1,3,2,4,3,2,1,2,5,4,3,2,1),ncol=5)
ans<-matrix(c(7,-1,-3,5,7),ncol=1)
solve(A)%*%ans
##C
##D
H%*%H%*%H
H
##C
##D
H%*%H%*%H
H
A
solve(A)%*%ans
A<-matrix(c(1,2,3,4,5,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,5,4,3,2,1)
,ncol=5)
A
A<-matrix(c(1,2,3,4,5,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,5,4,3,2,1)
,ncol=5)
A
ans<-matrix(c(7,-1,-3,5,7),ncol=1)
solve(A)%*%ans
A<-matrix(c(1,2,3,4,5,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,5,4,3,2,1)
,ncol=5)
A
ans<-matrix(c(7,-1,-3,5,7),ncol=1)
solve(A)%*%ans
A<-matrix(c(1,2,3,4,5,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,5,4,3,2,1),ncol=5)
A
ans<-matrix(c(7,-1,-3,5,7),ncol=1)
solve(A)%*%ans
A<-matrix(c(1,2,3,4,5,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,5,4,3,2,1),ncol=5)
A
ans<-matrix(c(7,-1,-3,5,17),ncol=1)
solve(A)%*%ans
t(E%*%t(A))
##2
#a
a<-c(1,5,-2,1,2,-1,3,6,-3)
A<-matrix(a,nrow=3)
A%*%A%*%A
#b
E<-matrix(c(1,0,0,0,1,1,0,0,1),ncol=3)
t(E%*%t(A))
A
A[3]
A[,3]
A[,2]
t(A[,2])
t(A[,2])
t(t(A[,2])
t(t(A[,2]))
t(A[,2])
t(t(A[,2]))
b<-matrix(rep(0,6),nrow=3)
b
b<-matrix(rep(0,6),nrow=3)+t(t(A[,2]))
b<-matrix(rep(0,6),nrow=3)%+%t(t(A[,2]))
##C
ans=diag(H)
ans
sum(ans)
MyEig$values
##2
#a
a<-c(1,5,-2,1,2,-1,3,6,-3)
A<-matrix(a,nrow=3)
A%*%A%*%A
##2
#a
a<-c(1,5,-2,1,2,-1,3,6,-3)
A<-matrix(a,nrow=3)
A%*%A%*%A
#b
E<-matrix(c(1,0,0,0,1,1,0,0,1),ncol=3)
t(E%*%t(A))
set.seed(123)
n <- 5
X <- cbind( rep(1, n), rnorm(n))
X
#a
H<-X%*%solve(t(X)%*%X)%*%t(X)
H
#b
MyEig <- eigen(H)
cat("eigenvalues: ")
MyEig$values
cat("eigenvactors: ")
MyEig$vectors
##C
ans=diag(H)
sum(ans)
##D
H%*%H%*%H
H
## 4
#a
A<-matrix(c(9,2,3,2,-1,-8,3,-8,0),ncol=3)
A
## 4
#a
A<-matrix(c(0,-1,2,1,0,3,2,3,0),ncol=3)
A
##b
det(A)
##b
det(A)
##c
sum(diag(A))
##d
I<-diag(c(1,1,1))
I
det(I+A)
det(A)
##5
A<-matrix(c(1,2,3,4,5,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,5,4,3,2,1),ncol=5)
det(A)
det(t(A))##48
B <- matrix(data = c(1,2,3,4,5,6,5,4,3,2,1,2,-3,2,5,20), ncol = 4)
det(B) ##48
det(t(B))##48
C<-matrix(c(1,5,-2,1,2,-1,3,6,-3),nrow=3)
det(C)
det(t(C))
det(t(C))
det(C)
C <- matrix(c(8,5,5,4), nrow = 2)
det(C)
det(t(C))
##6
P<-matrix(c(0.85,0.1,0.25,0.1,0.8,0.15,0.05,0.1,0.6),ncol=3)
P
#a
sum(P[,1])
#a
sum(P[1,])
#a
sum(P[1,])
sum(P[2,])
sum(P[3,])
matrixpower(P,2)#n=2
# the sum of each row equal 1
#b
matrixpower<-function(A,power){
MyEig <- eigen(A)
Q <- MyEig$vectors
Lambda <- diag( MyEig$values)
Q %*% Lambda %*% solve(Q)
return(Q %*% Lambda^power%*% solve(Q))
}
matrixpower(P,2)#n=2
matrixpower(P,3)#n=2
matrixpower(P,10)#n=2
matrixpower(P,10000)#n=2
##6
P<-matrix(c(0.85,0.1,0.25,0.1,0.8,0.15,0.05,0.1,0.6),ncol=3)
P
#a
sum(P[1,])
#c
X<-matrix(c(.49,.36,.15), nrow = 3)
X
(I-t(P))%*%X
#c
X<-matrix(c(.49,.36,.15), nrow = 3)
I<-diag(c(1,1,1))
(I-t(P))%*%X
matrixpower(P,1000)#n=2
matrixpower(P,2)#n=2
matrixpower(P,3)#n=3
matrixpower(P,10)#n=10
matrixpower(P,50)#n=50
## yes it is emerging
#c
X<-matrix(c(.49,.36,.15), nrow = 3)
I<-diag(c(1,1,1))
(I-t(P))%*%X
source("C:/Users/asus/Desktop/qqq.R", echo=TRUE)
(I-t(P))
(I-(P))%*%X
(I-(P))%*%X
(I-t(P))%*%X
I
(I-t(P))%*%X
## yes it is emerging
#c
X<-matrix(c(.49,.36,.15), nrow = 3)
I<-diag(c(1,1,1))
(I-t(P))%*%X
I-t(P)
I-t(P)
(I-t(P))%*%X
X
sum((I-t(P))%*%X)
sum((t(P)-I)%*%X
((t(P)-I)%*%X
((t(P)-I)%*%X
## yes it is emerging
#c
X<-matrix(c(.49,.36,.15), nrow = 3)
## yes it is emerging
#c
X<-matrix(c(.49,.36,.15), nrow = 3)
X
I<-diag(c(1,1,1))
(t(P)-I)%*%X
X
t(P)-I
t(X)%*%(t(P)-I)
t(X)%*%(t(P)-I)
t(X)%*%(t(P)-I)
sum(X)
I
(t(P)-I)%*%X
P-I
(P-I)%*%X
authors <- data.frame(
name = c("kapil", "sachin", "Rahul","Nikhil","Rohan"),
nationality = c("US","Australia","US","UK","India"),
retired = c("Yes","No","Yes","No","No"))
books <-data.frame(
name = c("C", "C++","Java","php",".net","R"),
title = c("Intro to C","Intro to C++",
"Intro to java", "Intro to php",
"Intro to .net", "Intro to R"),
author = c("kapil", "kapil","sachin", "Rahul",
"Nikhil","Nikhil"))
head(authors)
head(authors)
authors <- data.frame(
name = c("kapil", "sachin", "Rahul","Nikhil","Rohan"),
nationality = c("US","Australia","US","UK","India"),
retired = c("Yes","No","Yes","No","No"))
books <-data.frame(
name = c("C", "C++","Java","php",".net","R"),
title = c("Intro to C","Intro to C++",
"Intro to java", "Intro to php",
"Intro to .net", "Intro to R"),
author = c("kapil", "kapil","sachin", "Rahul",
"Nikhil","Nikhil"))
dt1 <- data.frame(ID = c(1, 2),
X1 = c("a1", "a2"))
dt2 <- data.frame(ID = c(2, 3),
X2 = c("b1", "b2"))
merge(x = dt1, y = dt2, by ="ID") # inner join
merge(x = dt1, y = dt2, by = "ID", all.x = TRUE)
merge(x = dt1, y = dt2, by = "ID", all = TRUE) # full_join
df1 <- data.frame(name = c("Mary", "Thor", "Sven", "Jane", "Ake", "Stephan",
"Bjorn", "Oden", "Dennis"),
treatment_gr = c(rep(c(1, 2, 3), each = 3)),
weight_p1 = round(runif(9, 100, 200), 0))
df2 <- data.frame(name = c("Sven", "Jane", "Ake", "Mary", "Thor", "Stephan",
"Oden", "Bjorn"),
weight_p2 = round(runif(8, 100, 200), 0))
df3 <- data.frame(treatment_gr = c(1, 2, 3),
type = c("dog-lovers", "cat-lovers", "all-lovers"))
df1
df2
df3
df4<-merge(x=df1,y=df2,all.y = true)
df4<-merge(x=df1,y=df2,all.y = TRUE)
df4
df1
round(runif(9, 100, 200), 0)
round(runif(9, 100, 200), 0)
round(runif(9, 100, 200), 0)
round(runif(9, 100, 200), 0)
round(runif(9, 100, 200), 0)
round(runif(9, 100, 200), 0)
round(runif(9, 100, 200), 0)
round(runif(9, 100, 200), 0)
round(runif(9, 100, 200), 0)
round(runif(9, 100, 200), 0)
round(runif(9, 100, 200), 0)
round(runif(9, 100, 200), 0)
(runif(9, 100, 200), 0)
runif(9, 100, 200), 0)
runif(9, 100, 200)
runif(9, 100, 200)
runif(9, 100, 200)
runif(9, 100, 200)
runif(9, 100, 200)
install.packages("reshape2")
library(reshape2)
data(airquality)
airquality
airquality
library(reshape2)
data(airquality)
dt <- data.frame(subject = c("John", "Mary", "John", "Mary"),
time = c(1,1,2,2),
age = c(33,50,33,50),
weight = c(90, 60, 95, 55),
height = c(2,2, 2.1, 1.9))
dt
mymelt <- melt(dt, id = c("subject", "time"))
mymelt
names(airquality) <- tolower(names(airquality))
airquality
air_melt <- melt(data = airquality, id=c("month", "day"), na.rm=TRUE)
dim(air_melt)
air_melt
air_melt_1 <- melt(data = airquality, id=c("month", "day"), measure.vars = "temp", na.rm=TRUE)
dim(air_melt_1)
acast(data = air_melt, formula = day ~ month ~ variable)
myacast <- acast(data = air_melt, formula = month ~ variable)
library(readxl)
myacast <- acast(data = air_melt, formula = month ~ variable)
library(readxl)
myacast <- acast(data = air_melt, formula = month ~ variable)
air_melt
myacast <- acast(data = air_melt, formula = month ~ variable)
acast(data = air_melt, formula = month ~ variable, fun.aggregate = mean)
dt
mymelt <- melt(dt, id = c("subject", "time"))
mymelt
names(airquality) <- tolower(names(airquality))
air_melt <- melt(data = airquality, id=c("month", "day"), na.rm=TRUE)
library(reshape2)
data(airquality)
myacast <- acast(data = air_melt, formula = month ~ variable)
acast(data = air_melt, formula = month ~ variable, fun.aggregate = mean)
acast(data = air_melt, formula = month ~ variable, fun.aggregate = mean)
myacast <- acast(data = air_melt, formula = month ~ variable)
myacast <- acast(data = air_melt, formula = month ~ variable)
air_melt
acast(data = air_melt, formula = month ~ variable, fun.aggregate = mean)
myacast <- acast(data = air_melt, formula = month ~ variable)
myacast <- acast(data = air_melt, formula = month ~ variable)
acast(data = air_melt, formula = day ~ month ~ variable)
myacast <- acast(data = air_melt, formula = month ~ variable)
myacast <- acast(data = air_melt, formula = month ~ variable)
install.packages("data.table")
library(data.table)
library(data.table)
flights <- fread(input = "C:\Users\asus\OneDrive\資料們\成大\110-1\課程投影片\程式設計\練習用\flights14.csv")
flights <- fread(input = "C:\Users\asus\OneDrive\資料們\成大\110-1\課程投影片\程式設計\練習用\flights14.csv")
dim(flights)
setwd("C:/Users/asus/OneDrive/資料們/成大/110-1/課程投影片/程式設計/練習用")
flights <- fread(input = "flights14.csv")
dim(flights)
flights
head(flights)
head(flights,4)
head(flights,4)
library(readxl)
library(reshape2)
library(data.table)
flights <- fread(input = "flights14.csv")
dim(flights)
flights
head(flights,4)
flights
flights <- fread(input = "flights14.csv")
dim(flights)
head(flights,4)
flights <- fread(input = "flights14.csv")
dim(flights)
head(flights,4)
ans <- flights[ , arr_delay] # return as a vector
ans
flights
