b<-matrix(1:6,nrow=2,ncol = 3)
a+b
a-b
a*b
a/b
x=1:3
x^1:3
2^3
x^(1:3)
k<-1:n
n<-100
x<-.61
k<-1:n
n<-100
x<-.61
k<-1:n
k
a<-(x^k)/k
a
0.61^10/10
log(exp(1),exp(2))
log(exp(1),exp(2))
log(base=exp(1),exp(2))
-1*log(base=exp(1),(1-x))
suma=sum(a)
suma
n<-100
n<-100
x<-.61
k<-1:n
a<-(x^k)/k
suma=sum(a)
b<--1*log(base=exp(1),(1-x))
cat("sigma:x^k/k=",suma," log...=",b)
cat("sigma:x^k/k=",suma,"\n log...=",b)
cat("sigma:x^k/k=",suma,"\nlog...=",b)
N <- 30
Fibonacci <- numeric(N)
Fibonacci[1] <- 1
Fibonacci[2] <- 1
for (n in 3:N) Fibonacci[n] <- Fibonacci[n-1] + Fibonacci[n-2]
Fibonacci
n_f<-(1,Fibonacci)
n_f<-c(1,Fibonacci)
n_f
q1=n_f/Fibonacci
Fibonacci
Fibonacci
n_f<-c(1,Fibonacci)
n_f
n_f<-c(1,Fibonacci[:29])
n_f<-c(1,Fibonacci[,29])
n_f<-c(1,Fibonacci[1:29])
n_f#f n+1
q1=n_f/Fibonacci
q1
plot(q1)
plot(q1)
q1=Fibonacci/n_f
Fibonacci <- numeric(N)
Fibonacci[1] <- 1
Fibonacci[2] <- 1
for (n in 3:N) Fibonacci[n] <- Fibonacci[n-1] + Fibonacci[n-2]
Fibonacci#f n
n_f<-c(1,Fibonacci[1:29])
n_f#f n-1
q1=Fibonacci/n_f
q1
plot(q1)
plot(q1)
(1+sqrt(5))/2
(1+sqrt(5))/2
N <- 30
Fibonacci <- numeric(N)
Fibonacci[1] <- 1
Fibonacci[2] <- 1
for (n in 3:N) Fibonacci[n] <- Fibonacci[n-1] + Fibonacci[n-2]
Fibonacci#f n
n_f<-c(1,Fibonacci[1:29])
n_f#f n-1
q1=Fibonacci/n_f
plot(q1)
(1+sqrt(5))/2
abline(h = (1+sqrt(5))/2, lwd=2, col="red", xlab="n", ylab="Ratio")
#(a)
N <- 30
Fibonacci <- numeric(N)
Fibonacci[1] <- 1
Fibonacci[2] <- 1
for (n in 3:N) Fibonacci[n] <- Fibonacci[n-1] + Fibonacci[n-2]
n_f<-c(1,Fibonacci[1:29])
q1=Fibonacci/n_f
plot(q1)
Pois_info <- function(lamba){
k<- 0
pois <- (exp(-1*lamba)*lamba^k)/factorial(k)
mean<-0
var <-0
while(pois>10^-10||k<20){#為了避免lamba過大導致f(0)小於10^-10不符合while判斷標準導致mean=0
mean<- mean+k*pois
k<-k+1
pois<- (exp(-1*lamba)*(lamba^k))/factorial(k)
}
k <- 0
pois <- (exp(-1*lamba)*lamba^k)/factorial(k)
while(pois>10^-10||k<20){
var<- var+(k-mean)^2 *pois
k<-k+1
pois<- (exp(-1*lamba)*(lamba^k))/factorial(k)
}
return(list(mean=mean,vaiance=var))
}
Pois_info(1)
pr<-function(x,p=.76){(1-p)^(x-1)*p}
pr(2)
x<-1
mean<-0
repeat{
mean<-mean+x*pr(x)
if(pr(x)<10^-20)break
x<-x+1
}
mean
B <- 1
x0 <- 0.5 # initial guess
mycos <- numeric(B)
B <- 1
x0 <- 0.5 # initial guess
mycos <- numeric(B)
B <- 1
x0 <- 0.5 # initial guess
mycos <- numeric(B)
mycos[1] <- cos(x0)-x*exp(x)
mycos[1] <- cos(x0)-x*exp(x0)
B <- 1
x0 <- 0.5 # initial guess
mycos <- numeric(B)
mycos[1] <- cos(x0)-x*exp(x0)
B <- 1
x0 <- 0.5 # initial guess
mycos <- numeric(B)
mycos[1] <- cos(x0)-x0*exp(x0)
B <- 1
B <- 1
x0 <- 0.5 # initial guess
mycos[0] <- numeric(x0)
mycos[1] <- cos(x0)-x0*exp(x0)
B <- 1
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
it <- 2
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
it <- 2
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(abs(mycos[it-1]-mycos[it])>0.005) {
mycos[it] <-cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1])
it<-it+1
}
mycos[it-1]-mycos[it]
it <- 2
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
mycos[it-1]
mycos[it]
abs(mycos[it-1]-mycos[it])
abs(mycos[it-1]-mycos[it])>0.005
it <- 2
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(abs(mycos[it-1]-mycos[it])>0.005) {
mycos[it] <-cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1])
it<-it+1
}
it <- 2
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
repeat{
if(abs(mycos[it-1]-mycos[it])>0.005)break
mycos[it] <-cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1])
it<-it+1
}
it <- 2
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
repeat{
if(abs(mycos[it-1]-mycos[it])>0.005)break
mycos[it] <-cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1])
it<-it+1
}
it <- 2
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
repeat{
if(abs(mycos[it-1]-mycos[it])>0.005)break
mycos[it] <-cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1])
print(it)
it<-it+1
}
plot(mycos)
it <- 2
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
repeat{
if(abs(mycos[it-1]-mycos[it])<0.005)break
mycos[it] <-cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1])
print(it)
it<-it+1
}
it <- 2
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
repeat{
if(abs(mycos[it-1]-mycos[it])<0.005)break
mycos[it] <-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
}
it <- 2
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(abs(mycos[it-1]-mycos[it])>0.005){
mycos[it] <-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
}
abs(mycos[it-1]-mycos[it])
it <- 2
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(abs(mycos[it-1]-mycos[it])>0.005){
mycos[it] <-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
}
it <- 3
x0 <- 0.5 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(abs(mycos[it-1]-mycos[it])>0.005){
mycos[it] <-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
}
mycos[it] <-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
it <- 3
x0 <- 0.1 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(abs(mycos[it-1]-mycos[it])>0.005){
mycos[it] <-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
}
mycos[it] <-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
it <- 3
x0 <- 0.1 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(abs(mycos[it-1]-mycos[it])>0.005){
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
}
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos
it <- 3
x0 <- 0.1 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(abs(mycos[it-1]-mycos[it])>0.005){
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
mycos
}
plot(mycos)
it <- 3
x0 <- 0.1 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(TRUE){
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
if(abs(mycos[it-1]-mycos[it])<0.005)break
}
it <- 3
x0 <- 0.1 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(TRUE){
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
if(mycos[it-1]-mycos[it]<0.005)break
}
it <- 3
x0 <- 0.1 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(TRUE){
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
if(numeric(mycos[it-1]-mycos[it])<0.005)break
}
it <- 3
x0 <- 0.1 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(TRUE){
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
if(numeric(mycos[it-1]-mycos[it])<0.005)break
it<-it+1
}
numeric(mycos[it-1]-mycos[it]
mycos[it-1]-mycos[it]
mycos[it-1]-mycos[it]
numeric(mycos[it-1]-mycos[it])<0.005
mycos[it-1]-mycos[it]<0.005
it<-it+1
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
if(mycos[it-1]-mycos[it]<0.005)break
it <- 3
x0 <- 0.1 # initial guess
mycos<-c(x0,cos(x0)-x0*exp(x0))
while(abs(mycos[it-1]-mycos[it])>0.005){
mycos<-c(mycos,cos(mycos[it-1])-mycos[it-1]*exp(mycos[it-1]))
print(it)
it<-it+1
}
curve(expr=exp(-1*x))
curve(expr=exp(-1*x))
curve(expr=exp(-1*x))
curve(expr=exp(-1*x),from = 0,to=10)
point<-exp(-1*seq(from=0,to=10,by=0.01))
point
point<-exp(-1*seq(from=0,to=10,step=0.01))
point<-exp(-1*seq(0,10,0.05))
knitr::opts_chunk$set(echo = TRUE)
#set.seed("the last four digits of the student ID")
col_range<- seq(-3, x, 0.1)
total <- seq(-3, 3, 0.1)
seq(0,10,0.05)
point<-exp(-1*seq(0,10,0.05))
plot(point)
point<-exp(-1*seq(0,10,0.05))
point<-exp(-1*seq(0,10,0.05))
plot(point,lty="l")
point<-exp(-1*seq(0,10,0.05))
plot(point,lty="l")
point<-exp(-1*seq(0,10,0.05))
plot(point,lty="l")
point<-exp(-1*seq(0,10,0.05))
point<-exp(-1*seq(0,10,0.05))
plot(seq(0,10,0.05),point,lty="l")
point<-exp(-1*seq(0,10,0.05))
plot(seq(0,10,0.05),point,lty="l")
plot(seq(0,10,0.05),point,type="l")
#Q5
Myplot<-function(location, upper = TRUE){
point<-exp(-1*seq(0,10,0.05))
plot(seq(0,10,0.05),point,type="l")
if(upper){
col_range<- seq(location, 3, 0.05)
header<-paste("Pr(X>",as.character(location),"), X ~ exp(1)")
}else if(upper==FALSE){
col_range<- seq(-3, location, 0.1)
header<-paste("Pr(X<",as.character(location),"), X ~ N(0, 1)")
}
plot(total,dnorm(total,mean=0,sd=1),xlim=c(-3,3),col="black",type="l",ylab="f(x)",xlab="x",main=header)
polygon(c(col_range,rev(col_range)),c(exp(-1*col_range)),rep(0,length(col_range))),col="green",border ="green" )
}
#Q5
Myplot<-function(location, upper = TRUE){
point<-exp(-1*seq(0,10,0.05))
if(upper){
col_range<- seq(location, 3, 0.05)
header<-paste("Pr(X>",as.character(location),"), X ~ exp(1)")
}else if(upper==FALSE){
col_range<- seq(-3, location, 0.1)
header<-paste("Pr(X<",as.character(location),"), X ~ N(0, 1)")
}
plot(seq(0,10,0.05),point,type="l")
#plot(total,dnorm(total,mean=0,sd=1),xlim=c(-3,3),col="black",type="l",ylab="f(x)",xlab="x",main=header)
polygon(c(col_range,rev(col_range)),c(exp(-1*col_range)),rep(0,length(col_range))),col="green",border ="green" )
}
#Q5
Myplot<-function(location, upper = TRUE){
point<-exp(-1*seq(0,10,0.05))
if(upper){
col_range<- seq(location, 3, 0.05)
header<-paste("Pr(X>",as.character(location),"), X ~ exp(1)")
}else if(upper==FALSE){
col_range<- seq(-3, location, 0.1)
header<-paste("Pr(X<",as.character(location),"), X ~ N(0, 1)")
}
plot(seq(0,10,0.05),point,type="l")
#plot(total,dnorm(total,mean=0,sd=1),xlim=c(-3,3),col="black",type="l",ylab="f(x)",xlab="x",main=header)
polygon(c(col_range,rev(col_range)),c(exp(-1*col_range)),rep(0,length(col_range))),col="green",border ="green" )
}
#Q5
Myplot<-function(location, upper = TRUE){
point<-exp(-1*seq(0,10,0.05))
if(upper){
col_range<- seq(location, 3, 0.05)
header<-paste("Pr(X>",as.character(location),"), X ~ exp(1)")
}else if(upper==FALSE){
col_range<- seq(-3, location, 0.1)
header<-paste("Pr(X<",as.character(location),"), X ~ N(0, 1)")
}
plot(seq(0,10,0.05),point,type="l")
polygon(c(col_range,rev(col_range)),c(exp(-1*col_range)),rep(0,length(col_range))),col="green",border ="green" )
}
#Q5
Myplot<-function(location, upper = TRUE){
point<-exp(-1*seq(0,10,0.05))
if(upper){
col_range<- seq(location, 3, 0.05)
header<-paste("Pr(X>",as.character(location),"), X ~ exp(1)")
}else if(upper==FALSE){
col_range<- seq(-3, location, 0.1)
header<-paste("Pr(X<",as.character(location),"), X ~ N(0, 1)")
}
plot(seq(0,10,0.05),point,type="l")
polygon(c(col_range,rev(col_range)),c(exp(-1*col_range)),rep(0,length(col_range))),col="green",border ="green" )
}
#Q5
Myplot<-function(location, upper = TRUE){
point<-exp(-1*seq(0,10,0.05))
if(upper){
col_range<- seq(location, 3, 0.05)
header<-paste("Pr(X>",as.character(location),"), X ~ exp(1)")
}else if(upper==FALSE){
col_range<- seq(-3, location, 0.1)
header<-paste("Pr(X<",as.character(location),"), X ~ N(0, 1)")
}
plot(point,type="l")
polygon(c(col_range,rev(col_range)),c(exp(-1*col_range)),rep(0,length(col_range))),col="green",border ="green" )
}
#Q5
Myplot<-function(location, upper = TRUE){
point<-exp(-1*seq(0,10,0.05))
if(upper){
col_range<- seq(location, 3, 0.05)
header<-paste("Pr(X>",as.character(location),"), X ~ exp(1)")
}else if(upper==FALSE){
col_range<- seq(-3, location, 0.1)
header<-paste("Pr(X<",as.character(location),"), X ~ N(0, 1)")
}
plot(seq(0,10,0.05),point,type="l")
polygon(c(col_range,rev(col_range)),c(exp(-1*col_range)),rep(0,length(col_range))),col="green",border ="green" )
}
point<-exp(-1*seq(0,10,0.05))
if(upper){
col_range<- seq(location, 3, 0.05)
header<-paste("Pr(X>",as.character(location),"), X ~ exp(1)")
}else if(upper==FALSE){
col_range<- seq(-3, location, 0.1)
header<-paste("Pr(X<",as.character(location),"), X ~ N(0, 1)")
}
col_range<- seq(location, 3, 0.05)
Myplot(location = 1, upper = TRUE)
#Q5
Myplot<-function(location, upper = TRUE){
point<-exp(-1*seq(0,10,0.05))
if(upper){
col_range<- seq(location, 3, 0.05)
header<-paste("Pr(X>",as.character(location),"), X ~ exp(1)")
}else if(upper==FALSE){
col_range<- seq(-3, location, 0.1)
header<-paste("Pr(X<",as.character(location),"), X ~ N(0, 1)")
}
plot(seq(0,10,0.05),point,type="l")
polygon(c(col_range,rev(col_range)),c(exp(-1*col_range)),rep(0,length(col_range))),col="green",border ="green" )
}
Myplot(location = 1, upper = TRUE)
