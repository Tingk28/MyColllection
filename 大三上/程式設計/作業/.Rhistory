temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
iter<-iter+1
accu<-abs(temp-x0)
while (iter==0||accu>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
accu<-abs(temp-x0)
}
while (iter==0||accu>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
accu<-abs(temp-x0)
}
while (iter==0||accu>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
accu<-abs(temp-x0)
}
plot(iter)
return(x0)
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0){
point<- c(x0)
iter<-0
accu<-0.1
while (iter==0||accu>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
accu<-abs(temp-x0)
}
plot(iter)
return(x0)
}
Newton_method(fx,fx_prime)
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0){
point<- c(x0)
iter<-0
accu<-0.1
while (iter==0||accu>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
accu<-abs(temp-x0)
}
plot(iter)
return(x0)
}
Newton_method(fx,fx_prime)
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0){
point<- c(x0)
iter<-0
accu<-0.1
while (iter==0||accu>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
accu<-abs(temp-x0)
}
plot(iter)
return(x0)
}
Newton_method(fx,fx_prime)
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0){
point<- c(x0)
iter<-0
accu<-0.1
while (iter==0||accu>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
accu<-unlist(abs(temp-x0))
}
plot(iter)
return(x0)
}
Newton_method(fx,fx_prime)
gc()
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0){
point<- c(x0)
iter<-0
accu<-0.1
while (abs(accu)>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
accu<-abs(temp-x0)
}
plot(iter)
return(x0)
}
Newton_method(fx,fx_prime)
accu<-0.1
abs(accu)>tor
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0){
point<- c(x0)
iter<-0
accu<-0.1
while (abs(accu)>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
accu<-abs(temp-x0)
}
plot(iter)
return(x0)
}
tor=10^-8
abs(accu)>tor
x0 <- 0.1
x <- x0
myf <- x^3 + 2*x^2 -7
num.iter <- 0
tolerance <- 0.000001
while ( abs(myf) > tolerance){
myf_prime <- 3*x^2 + 4*x
x <- x - myf/myf_prime
myf <- x^3 + 2*x^2 -7
num.iter <- num.iter + 1
}
x
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0){
point<- c(x0)
iter<-0
accu<-0.1
while (abs(x0)>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(iter)
return(x0)
}
Newton_method(fx,fx_prime)
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0){
point<- c(x0)
iter<-0
while (abs(x0)>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(iter)
return(x0)
}
Newton_method(fx,fx_prime)
Newton_method(fx,fx_prime)
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0){
point<- c(x0)
iter<-0
while (abs(x0)>tor){
temp<-x0
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(iter)
return(x0)
}
Newton_method(fx,fx_prime)
while (abs(x0)>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0){
point<- c(x0)
iter<-0
while (abs(x0)>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(iter)
return(x0)
}
Newton_method(fx,fx_prime)
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0){
point<- c(x0)
iter<-0
while (abs(x0)>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(iter)
return(x0)
}
x0=0
point<- c(x0)
iter<-0
x0<- x0-fx(x0)/fx_prime(x0)
x0=0
fx(x0)
fx_prime(x0)
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
iter<-0
while (abs(x0)>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(iter)
return(x0)
}
Newton_method(fx,fx_prime)
x0=0.1
point<- c(x0)
iter<-0
abs(x0)>tor
tor=10^-8
abs(x0)>tor
x0-fx(x0)/fx_prime(x0)
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
plot(iter)
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
iter<-0
while (abs(x0)>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(point)
return(x0)
}
Newton_method(fx,fx_prime)
fx<- function(x){x^3+2*x^2-7}
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
iter<-0
while (abs(x0)>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(point)
return(x0)
}
Newton_method(fx,fx_prime)
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
iter<-0
while (abs(x0)>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
print(point)
iter<-iter+1
}
plot(point)
return(x0)
}
Newton_method(fx,fx_prime)
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
iter<-0
while (abs(fx(x0))>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
print(point)
iter<-iter+1
}
plot(point)
return(x0)
}
Newton_method(fx,fx_prime)
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
iter<-0
while (abs(fx(x0))>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(point)
return(x0)
}
Newton_method(fx,fx_prime)
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
iter<-0
while (abs(fx(x0))>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(point,type='l')
return(x0)
}
Newton_method(fx,fx_prime)
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
equ<- c()
iter<-0
while (abs(fx(x0))>tor){
equ<-c(equ,fx(x0))
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(point,type='l',main="Plot of iteration")
return(x0)
}
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
equ<- c()
iter<-0
while (abs(fx(x0))>tor){
equ<-c(equ,fx(x0))
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
plot(point,type='l',main="Plot of iteration")
plot(equ,type="l",main="f(x)")
return(x0)
}
Newton_method(fx,fx_prime)
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
equ<- c()
iter<-0
while (abs(fx(x0))>tor){
equ<-c(equ,fx(x0))
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
print(equ)
plot(point,type='l',main="Plot of iteration")
plot(equ,type="l",main="f(x)")
return(x0)
}
Newton_method(fx,fx_prime)
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
equ<- c()
iter<-0
while (abs(fx(x0))>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
print(equ)
plot(point,type='l',main="Plot of iteration")
curve(expr = x^3+2*x^2-7,main="f(x)")
#plot(equ,type="l",main="f(x)")
return(x0)
}
Newton_method(fx,fx_prime)
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
equ<- c()
iter<-0
while (abs(fx(x0))>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
print(equ)
plot(point,type='l',main="Plot of iteration")
curve(expr = x^3+2*x^2-7,main="f(x)",form=-2,to,2)
#plot(equ,type="l",main="f(x)")
return(x0)
}
Newton_method(fx,fx_prime)
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
equ<- c()
iter<-0
while (abs(fx(x0))>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
print(equ)
plot(point,type='l',main="Plot of iteration")
curve(expr = x^3+2*x^2-7,main="f(x)",from=-2,to=2)
#plot(equ,type="l",main="f(x)")
return(x0)
}
Newton_method(fx,fx_prime)
fx<- function(x){x^3+2*x^2-7}
fx<- function(x){x^3+2*x^2-7}
fx<- function(x){x^3+2*x^2-7}
fx_prime<-function(x){3*x^2+4*x}
Newton_method <- function(fx,fx_prime,tor=10^-8,x0=0.1){
point<- c(x0)
equ<- c()
iter<-0
while (abs(fx(x0))>tor){
x0<- x0-fx(x0)/fx_prime(x0)
point<-c(point,x0)
iter<-iter+1
}
print(equ)
plot(point,type='l',main="Plot of iteration",xlab="times",ylab="x0")
curve(expr = x^3+2*x^2-7,main="f(x)",from=-2,to=2)
return(x0)
}
Newton_method(fx,fx_prime)
knitr::opts_chunk$set(echo = TRUE)
#set.seed("the last four digits of the student ID")
# Question 1
A<-matrix(c(1,2,3,4,5,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,5,4,3,2,1),ncol=5)
ans<-matrix(c(7,-1,-3,5,17),ncol=1)
solve(A)%*%ans
##2
#a
a<-c(1,5,-2,1,2,-1,3,6,-3)
A<-matrix(a,nrow=3)
#b
A[,3]
##2
#a
A<-matrix(c(1,5,-2,1,2,-1,3,6,-3),nrow=3)
A%*%A%*%A
#b
A[,3]<-A[,2]+A[,3]
A
(I-t(P))%*%X
## yes it is emerging
#c
X<-matrix(c(.49,.36,.15), nrow = 3)
I<-diag(c(1,1,1))
P<-matrix(c(0.85,0.1,0.25,0.1,0.8,0.15,0.05,0.1,0.6),ncol=3)
#a
sum(P[1,])
sum(P[2,])
sum(P[3,])
# the sum of each row equal 1
#b
matrixpower<-function(A,power){
MyEig <- eigen(A)
Q <- MyEig$vectors
Lambda <- diag( MyEig$values)
Q %*% Lambda %*% solve(Q)
return(Q %*% Lambda^power%*% solve(Q))
}
matrixpower(P,2)#n=2
matrixpower(P,10)#n=10
matrixpower(P,50)#n=50
## yes it is emerging
#c
X<-matrix(c(.49,.36,.15), nrow = 3)
I<-diag(c(1,1,1))
(I-t(P))%*%X
